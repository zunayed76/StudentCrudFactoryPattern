//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace studentcrudapi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class scDBEntities : DbContext
    {
        public scDBEntities()
            : base("name=scDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Item> Items { get; set; }
    
        public virtual int InsertData(string firstName, string lastName, string dob, string sub1, Nullable<int> num1, string sub2, Nullable<int> num2, string sub3, Nullable<int> num3, string sub4, Nullable<int> num4)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var dobParameter = dob != null ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(string));
    
            var sub1Parameter = sub1 != null ?
                new ObjectParameter("sub1", sub1) :
                new ObjectParameter("sub1", typeof(string));
    
            var num1Parameter = num1.HasValue ?
                new ObjectParameter("num1", num1) :
                new ObjectParameter("num1", typeof(int));
    
            var sub2Parameter = sub2 != null ?
                new ObjectParameter("sub2", sub2) :
                new ObjectParameter("sub2", typeof(string));
    
            var num2Parameter = num2.HasValue ?
                new ObjectParameter("num2", num2) :
                new ObjectParameter("num2", typeof(int));
    
            var sub3Parameter = sub3 != null ?
                new ObjectParameter("sub3", sub3) :
                new ObjectParameter("sub3", typeof(string));
    
            var num3Parameter = num3.HasValue ?
                new ObjectParameter("num3", num3) :
                new ObjectParameter("num3", typeof(int));
    
            var sub4Parameter = sub4 != null ?
                new ObjectParameter("sub4", sub4) :
                new ObjectParameter("sub4", typeof(string));
    
            var num4Parameter = num4.HasValue ?
                new ObjectParameter("num4", num4) :
                new ObjectParameter("num4", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertData", firstNameParameter, lastNameParameter, dobParameter, sub1Parameter, num1Parameter, sub2Parameter, num2Parameter, sub3Parameter, num3Parameter, sub4Parameter, num4Parameter);
        }
    
        public virtual int ShowData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShowData");
        }
    
        public virtual int UpdateData(Nullable<int> id, string firstName, string lastName, string dob, string sub1, Nullable<int> num1, string sub2, Nullable<int> num2, string sub3, Nullable<int> num3, string sub4, Nullable<int> num4)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var dobParameter = dob != null ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(string));
    
            var sub1Parameter = sub1 != null ?
                new ObjectParameter("sub1", sub1) :
                new ObjectParameter("sub1", typeof(string));
    
            var num1Parameter = num1.HasValue ?
                new ObjectParameter("num1", num1) :
                new ObjectParameter("num1", typeof(int));
    
            var sub2Parameter = sub2 != null ?
                new ObjectParameter("sub2", sub2) :
                new ObjectParameter("sub2", typeof(string));
    
            var num2Parameter = num2.HasValue ?
                new ObjectParameter("num2", num2) :
                new ObjectParameter("num2", typeof(int));
    
            var sub3Parameter = sub3 != null ?
                new ObjectParameter("sub3", sub3) :
                new ObjectParameter("sub3", typeof(string));
    
            var num3Parameter = num3.HasValue ?
                new ObjectParameter("num3", num3) :
                new ObjectParameter("num3", typeof(int));
    
            var sub4Parameter = sub4 != null ?
                new ObjectParameter("sub4", sub4) :
                new ObjectParameter("sub4", typeof(string));
    
            var num4Parameter = num4.HasValue ?
                new ObjectParameter("num4", num4) :
                new ObjectParameter("num4", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateData", idParameter, firstNameParameter, lastNameParameter, dobParameter, sub1Parameter, num1Parameter, sub2Parameter, num2Parameter, sub3Parameter, num3Parameter, sub4Parameter, num4Parameter);
        }
    
        public virtual int DeleteData(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteData", idParameter);
        }
    }
}
